# -*- coding: utf-8 -*-
"""calidad del aire2.0

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aC3wuPjshywpmXHtEgPqT4cW7YxSZXEZ
"""

import pandas as pd
import numpy as np
import pylab as pl
import seaborn as sns

from google.colab import drive
drive.mount('/content/drive')

data = pd.read_csv('/content/drive/MyDrive/calidad del aire/estacion-kennedy-limpio.csv', delimiter=';', index_col=[0], decimal=',')
data.head()

data.describe()

data['CO'].mean()

data['NO'].mean()

data['NO2'].mean()

data['NOX'].mean()

fig = pl.figure(figsize=(3,3))
pl.hist(data['CO'], color='yellow', histtype='step')
pl.axvline(data['CO'].mean(), c='black', linestyle='-.', label='Promedio')
pl.legend()
pl.xlabel('CO [PPB]')
pl.ylabel('Conteos')
pl.title('Histograma de CO', fontsize=15)
pl.grid()

fig = pl.figure(figsize=(3,3))
pl.hist(data['NO'], color='orange', histtype='step')
pl.axvline(data['NO'].mean(), c='black', linestyle='-.', label='Promedio')
pl.legend()
pl.xlabel('NO [PPB]')
pl.ylabel('Conteos')
pl.title('Histograma de NO', fontsize=15)
pl.grid()

fig = pl.figure(figsize=(3,3))
pl.hist(data['NO2'], color='red', histtype='step')
pl.axvline(data['NO2'].mean(), c='black', linestyle='-.', label='Promedio')
pl.legend()
pl.xlabel('NO2 [PPB]')
pl.ylabel('Conteos')
pl.title('Histograma de NO2', fontsize=15)
pl.grid()
fig = pl.figure(figsize=(3,3))

fig = pl.figure(figsize=(3,3))
pl.hist(data['NOX'], color='purple', histtype='step')
pl.axvline(data['NOX'].mean(), c='black', linestyle='-.', label='Promedio')
pl.legend()
pl.xlabel('NOX [PPM]')
pl.ylabel('Conteos')
pl.title('Histograma de NOX', fontsize=15)
pl.grid()

fig = pl.figure(figsize=(3,3))
pl.hist(data['SO2'], color='brown', histtype='step')
pl.axvline(data['SO2'].mean(), c='black', linestyle='-.', label='Promedio')
pl.legend()
pl.xlabel('SO2 [PPM]')
pl.ylabel('Conteos')
pl.title('Histograma de SO2', fontsize=15)
pl.grid()

fig = pl.figure(figsize=(3,3))
pl.hist(data['HR'], color='green', histtype='step')
pl.axvline(data['HR'].mean(), c='black', linestyle='-.', label='Promedio')
pl.legend()
pl.xlabel('HR [%]')
pl.ylabel('Conteos')
pl.title('Histograma de HR', fontsize=15)
pl.grid()

data['NO'].fillna(data['NO'].mean(), inplace=True)
Q1 = data['NO'].quantile(0.25)
Q2 = data['NO'].quantile(0.50)
Q3 = data['NO'].quantile(0.75)
print(Q1, Q2, Q3)

IQR = Q3 - Q1
print(IQR)

ii = data.NO < Q1 - 1.5*IQR
jj = data.NO > Q3 + 1.5*IQR

sum(ii), sum(jj)
data.NO[ii | jj]



_ = pl.boxplot(data.NO)

data['CO'].fillna(data['CO'].mean(), inplace=True)
Q1 = data['CO'].quantile(0.25)
Q2 = data['CO'].quantile(0.50)
Q3 = data['CO'].quantile(0.75)
print(Q1, Q2, Q3)

IQR = Q3 - Q1
print(IQR)

ii = data.CO < Q1 - 1.5*IQR
jj = data.CO > Q3 + 1.5*IQR

sum(ii), sum(jj)
data.CO[ii | jj]

_ = pl.boxplot(data.CO)

data['NO2'].fillna(data['NO2'].mean(), inplace=True)
Q1 = data['NO2'].quantile(0.25)
Q2 = data['NO2'].quantile(0.50)
Q3 = data['NO2'].quantile(0.75)
print(Q1, Q2, Q3)

IQR = Q3 - Q1
print(IQR)

ii = data.NO2 < Q1 - 1.5*IQR
jj = data.NO2 > Q3 + 1.5*IQR

sum(ii), sum(jj)
data.NO2[ii | jj]

_ = pl.boxplot(data.NO2)

data['NOX'].fillna(data['NOX'].mean(), inplace=True)
Q1 = data['NOX'].quantile(0.25)
Q2 = data['NOX'].quantile(0.50)
Q3 = data['NOX'].quantile(0.75)
print(Q1, Q2, Q3)

IQR = Q3 - Q1
print(IQR)

ii = data.NOX < Q1 - 1.5*IQR
jj = data.NOX > Q3 + 1.5*IQR

sum(ii), sum(jj)
data.NOX[ii | jj]

_ = pl.boxplot(data.NOX)

data['SO2'].fillna(data['SO2'].mean(), inplace=True)
Q1 = data['SO2'].quantile(0.25)
Q2 = data['SO2'].quantile(0.50)
Q3 = data['SO2'].quantile(0.75)
print(Q1, Q2, Q3)

IQR = Q3 - Q1
print(IQR)

ii = data.SO2 < Q1 - 1.5*IQR
jj = data.SO2 > Q3 + 1.5*IQR

sum(ii), sum(jj)
data.SO2[ii | jj]

_ = pl.boxplot(data.SO2)

data['HR'].fillna(data['HR'].mean(), inplace=True)
Q1 = data['HR'].quantile(0.25)
Q2 = data['HR'].quantile(0.50)
Q3 = data['HR'].quantile(0.75)
print(Q1, Q2, Q3)

IQR = Q3 - Q1
print(IQR)

ii = data.HR < Q1 - 1.5*IQR
jj = data.HR > Q3 + 1.5*IQR

sum(ii), sum(jj)
data.HR[ii | jj]

_ = pl.boxplot(data.HR)

_ = pl.violinplot(data.NO, quantiles=[0.25,0.5,0.75])

_ = pl.violinplot(data.NO2, quantiles=[0.25,0.5,0.75])

_ = pl.violinplot(data.CO, quantiles=[0.25,0.5,0.75])

_ = pl.violinplot(data.NOX, quantiles=[0.25,0.5,0.75])

_ = pl.violinplot(data.SO2, quantiles=[0.25,0.5,0.75])

_ = pl.violinplot(data.HR, quantiles=[0.25,0.5,0.75])

# Gráfico de dispersión

from scipy.stats import pearsonr

def corrfunc(x, y, ax=None, **kws):
    """Plot the correlation coefficient in the top left hand corner of a plot."""
    r, _ = pearsonr(x, y)
    ax = ax or pl.gca()
    ax.annotate(f'ρ = {r:.2f}', xy=(.1, .9), xycoords=ax.transAxes)

fig=pl.figure(figsize=(3,3))
pp = sns.pairplot(data)
pp.map_lower(corrfunc)

